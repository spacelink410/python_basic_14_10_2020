"""Реализовать итератор, повторяющий элементы некоторого списка, определенного заранее."""

import math


def my_cycle(iter_obj, cycle_stop: int = 1):
    """Функция возвращает элементы итерируемого объекта. Затем повторяет вывод столько раз,
    сколько указано в стоп-переменной.

    :param iter_obj: итерируемый объект.
    :param cycle_stop: стоп-переменная. количество циклов вывода итерируемого объекта. По умолчанию принимает значение 1
    :return: объект списка, возвращающий последовательно элементы исходного итерируемого объекта

    """

    # на всякий случай возьмем модуль числа,
    # если поступит отрицательное целое число
    cycle_stop = math.fabs(cycle_stop)
    while cycle_stop:
        for itm in iter_obj:
            yield itm
        cycle_stop -= 1


for el in my_cycle([(1, 3), (3, 4), 5, "test", 7, 67, 23], 2):
    print(el)
