"""Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например,
команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.

"""


class NotString(Exception):
    def __init__(self, text):
        self.text = text

    def __str__(self):
        return f"Введенное значение {self.text} было пропущено, т.к. не является числом"


def clear_digit_list(var_list):
    value_list: list = []

    # преобразуем каждое значение к float, чтобы исключить неверную переменную
    # и продолжить вычисление без прерывания
    for el in var_list:
        try:
            if el.isnumeric():
                value_list.append(float(el))
            else:
                raise NotString(el)
        except NotString as err:
            print(err)

    return value_list


result_list: list = []
stop_char: bool = True

while stop_char:
    user_string: list = input("Введите разные числа через пробел: ").split()

    if "stop" in user_string:
        user_string = user_string[:user_string.index("stop")]
        stop_char = False

    result_list.extend(clear_digit_list(user_string))

print(result_list)
