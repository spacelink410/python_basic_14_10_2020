"""Создать класс TrafficLight (светофор) и определить у него один атрибут color (цвет) и метод running (запуск).
Атрибут реализовать как приватный. В рамках метода реализовать переключение светофора в режимы:
красный, желтый, зеленый.
Продолжительность первого состояния (красный) составляет 7 секунд,
второго (желтый) — 2 секунды, третьего (зеленый) — на ваше усмотрение.
Переключение между режимами должно осуществляться только в указанном порядке (красный, желтый, зеленый).
Проверить работу примера, создав экземпляр и вызвав описанный метод.

Задачу можно усложнить, реализовав проверку порядка режимов, и при его нарушении выводить соответствующее
сообщение и завершать скрипт.

"""

import time


class TrafficLight:
    __color: str = 'red'
    mode: dict = {'red': 7, 'yellow': 2, 'green': 5}

    def running(self, count):
        """Метод выполняет вывод цветов с временными интервами согласно словарю mode,
        который задается при инициализации экземпляра класса.

        Метод выдает цвета согласно порядку красный -> желтый -> зеленый, при этом начинаться
        может не обязательно с красного. Начальный цвет задается при инициалищации экземпляра класса

        Циклом считаем проход от красного до зеленого,
        поэтому cycle увеличиваем только при переходе от зеленого к красному

        :param count:  количество циклов до завершения, чтобы не уйти в бескнечность
        :return: None
        """

        cycle: int = 0
        while cycle < count:
            print(self.__color)
            time.sleep(self.mode[self.__color])
            if self.__color == 'red':
                self.__color = 'yellow'
            elif self.__color == 'yellow':
                self.__color = 'green'
            elif self.__color == 'green':
                self.__color = 'red'
                cycle += 1


tr = TrafficLight()
tr.running(4)
